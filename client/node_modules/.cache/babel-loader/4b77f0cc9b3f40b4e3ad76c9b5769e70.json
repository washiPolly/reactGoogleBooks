{"ast":null,"code":"import _defineProperty from \"/Users/pollysu/Desktop/UCR Bootcamp.nosync/BooksReactRouter/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/pollysu/Desktop/UCR Bootcamp.nosync/BooksReactRouter/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/pollysu/Desktop/UCR Bootcamp.nosync/BooksReactRouter/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pollysu/Desktop/UCR Bootcamp.nosync/BooksReactRouter/client/src/pages/Books.js\";\nimport React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Results from \"../components/Results\";\nimport axios from 'axios';\n\nfunction Books() {\n  // Setting our component's initial state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formObject = _useState4[0],\n      setFormObject = _useState4[1]; // Load all books and store them with setBooks\n\n\n  useEffect(function () {\n    loadBooks();\n  }, []); // Loads all books and sets them to books\n\n  function loadBooks() {\n    API.getBooks().then(function (res) {\n      return setBooks(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ; // Deletes a book from the database with a given id, then reloads books from the db\n\n  function deleteBook(id) {\n    API.deleteBook(id).then(function (res) {\n      return loadBooks();\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  } // Handles updating component state when the user types into the input field\n\n\n  function handleInputChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setFormObject(_objectSpread({}, formObject, _defineProperty({}, name, value)));\n  }\n\n  ; // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  // function handleFormSubmit(event) {\n  //   event.preventDefault();\n  //   if (formObject.title && formObject.author) {\n  //     API.saveBook({\n  //       title: formObject.title,\n  //       author: formObject.author,\n  //       synopsis: formObject.synopsis\n  //     })\n  //       .then(res => loadBooks())\n  //       .catch(err => console.log(err));\n  //   }\n  // };\n  // Handle Submit\n\n  var handleSubmit = function handleSubmit() {\n    if (formObject.title) {\n      axios.get('https://www.googleapis.com/books/v1/volumes?q=${query}').then(function (res) {\n        console.log(res.data);\n      }).catch(function (err) {\n        console.log(err.response);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"d-flex justify-content-center align-items-center flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"lg-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Google Books Search\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Search for and Save Books of Interest\")), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: function onChange(e) {\n      return setBooks(e.targe.value);\n    } // name=\"title\"\n    ,\n    value: books,\n    placeholder: \"Book Search (required)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    disabled: !(formObject.author && formObject.title),\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Search\"))), /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Results, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Books;","map":{"version":3,"sources":["/Users/pollysu/Desktop/UCR Bootcamp.nosync/BooksReactRouter/client/src/pages/Books.js"],"names":["React","useState","useEffect","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Results","axios","Books","books","setBooks","formObject","setFormObject","loadBooks","getBooks","then","res","data","catch","err","console","log","deleteBook","id","handleInputChange","event","target","name","value","handleSubmit","title","get","response","e","targe","author"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Results from \"../components/Results\";\nimport axios from 'axios';\n\n\nfunction Books() {\n  // Setting our component's initial state\n  const [books, setBooks] = useState([])\n  const [formObject, setFormObject] = useState({})\n\n  // Load all books and store them with setBooks\n  useEffect(() => {\n    loadBooks()\n  }, [])\n\n  // Loads all books and sets them to books\n  function loadBooks() {\n    API.getBooks()\n      .then(res =>\n        setBooks(res.data)\n      )\n      .catch(err => console.log(err));\n  };\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n  function deleteBook(id) {\n    API.deleteBook(id)\n      .then(res => loadBooks())\n      .catch(err => console.log(err));\n  }\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setFormObject({ ...formObject, [name]: value })\n  };\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  // function handleFormSubmit(event) {\n  //   event.preventDefault();\n  //   if (formObject.title && formObject.author) {\n  //     API.saveBook({\n  //       title: formObject.title,\n  //       author: formObject.author,\n  //       synopsis: formObject.synopsis\n  //     })\n  //       .then(res => loadBooks())\n  //       .catch(err => console.log(err));\n  //   }\n  // };\n\n  // Handle Submit\n  const handleSubmit = () => {\n    if (formObject.title) {\n      axios.get('https://www.googleapis.com/books/v1/volumes?q=${query}')\n        .then(res => {\n          console.log(res.data)\n        }).catch(err => {\n          console.log(err.response)\n        })\n    }\n  }\n\n\n\n  return (\n    <Container className=\"d-flex justify-content-center align-items-center flex-column\">\n      <Row>\n        <Col size=\"lg-12\">\n          <Jumbotron>\n            <h1>Google Books Search</h1>\n            <h2>Search for and Save Books of Interest</h2>\n          </Jumbotron>\n          <form>\n            <Input\n              onChange={e => setBooks(e.targe.value)}\n              // name=\"title\"\n              value={books}\n              placeholder=\"Book Search (required)\"\n\n            />\n            {/* <Input\n              onChange={handleInputChange}\n              name=\"author\"\n              placeholder=\"Author (required)\"\n            />\n            <TextArea\n              onChange={handleInputChange}\n              name=\"synopsis\"\n              placeholder=\"Synopsis (Optional)\"\n            /> */}\n            <FormBtn\n              disabled={!(formObject.author && formObject.title)}\n              onClick={handleSubmit}\n            >\n              Search\n              </FormBtn>\n          </form>\n        </Col>\n\n        <Col size=\"md-12\">\n          <Results />\n        </Col>\n        {/* <Col size=\"md-6 sm-12\">\n          <Jumbotron>\n            <h1>Books On My List</h1>\n          </Jumbotron>\n          {books.length ? (\n            <List>\n              {books.map(book => (\n                <ListItem key={book._id}>\n                  <Link to={\"/books/\" + book._id}>\n                    <strong>\n                      {book.title} by {book.author}\n                    </strong>\n                  </Link>\n                  <DeleteBtn onClick={() => deleteBook(book._id)} />\n                </ListItem>\n              ))}\n            </List>\n          ) : (\n              <h3>No Results to Display</h3>\n            )}\n        </Col> */}\n      </Row>\n    </Container>\n  );\n}\n\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}
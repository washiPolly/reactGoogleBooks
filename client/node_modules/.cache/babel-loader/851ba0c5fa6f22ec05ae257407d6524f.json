{"ast":null,"code":"import _slicedToArray from \"/Users/pollysu/Desktop/UCR Bootcamp.nosync/BooksReactRouter/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pollysu/Desktop/UCR Bootcamp.nosync/BooksReactRouter/client/src/pages/Books.js\";\nimport React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Results from \"../components/Results\";\nimport axios from 'axios';\n\nfunction Books() {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      book = _useState2[0],\n      setBook = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      result = _useState4[0],\n      setResult = _useState4[1];\n\n  var _useState5 = useState(\"AIzaSyBjBhHbs9f8Dyp1xyn0LGGG9f9zAPhFSpQ\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      apiKey = _useState6[0],\n      setApiKey = _useState6[1];\n\n  function handleChange(event) {\n    var book = event.target.value;\n    setBook(book);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    axios.get(\"https://www.googleapis.com/books/v1/volumes?q=$\" + book + \"&maxResult=40\").then(function (data) {\n      console.log(data.data.items);\n      setResult(data.data.items);\n    });\n  } // // Setting our component's initial state\n  // const [books, setBooks] = useState([])\n  // const [formObject, setFormObject] = useState({})\n  // // Load all books and store them with setBooks\n  // useEffect(() => {\n  //   loadBooks()\n  // }, [])\n  // // Loads all books and sets them to books\n  // function loadBooks() {\n  //   API.getBooks()\n  //     .then(res =>\n  //       setBooks(res.data)\n  //     )\n  //     .catch(err => console.log(err));\n  // };\n  // // Deletes a book from the database with a given id, then reloads books from the db\n  // function deleteBook(id) {\n  //   API.deleteBook(id)\n  //     .then(res => loadBooks())\n  //     .catch(err => console.log(err));\n  // }\n  // // Handles updating component state when the user types into the input field\n  // function handleInputChange(event) {\n  //   const { name, value } = event.target;\n  //   setFormObject({ ...formObject, [name]: value })\n  // };\n  // // When the form is submitted, use the API.saveBook method to save the book data\n  // // Then reload books from the database\n  // // function handleFormSubmit(event) {\n  // //   event.preventDefault();\n  // //   if (formObject.title && formObject.author) {\n  // //     API.saveBook({\n  // //       title: formObject.title,\n  // //       author: formObject.author,\n  // //       synopsis: formObject.synopsis\n  // //     })\n  // //       .then(res => loadBooks())\n  // //       .catch(err => console.log(err));\n  // //   }\n  // // };\n  // // Handle Submit\n  // const handleSubmit = () => {\n  //   if (formObject.title) {\n  //     axios.get('https://www.googleapis.com/books/v1/volumes?q=${query}')\n  //       .then(res => {\n  //         console.log(res.data)\n  //       }).catch(err => {\n  //         console.log(err.response)\n  //       })\n  //   }\n  // }\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"d-flex justify-content-center align-items-center flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"lg-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Google Books Search\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Search for and Save Books of Interest\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input // name=\"title\"\n  , {\n    value: book,\n    placeholder: \"Book Search (required)\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Search\"))), /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, result.map(function (book) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, book.volumeInfo.title), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"Written By: \", book.volumeInfo.authors), /*#__PURE__*/React.createElement(\"a\", {\n      href: book.volumeInfo.previewLink,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        float: \"left\"\n      },\n      src: book.volumeInfo.imageLinks.thumbnail,\n      alt: book.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"table\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        float: \"left\",\n        marginLeft: \"15px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }, \"Description: \", book.volumeInfo.description))));\n  }), /*#__PURE__*/React.createElement(Results // image={items.imageLinks.thumbnail}\n  // title={items.volumeInfo.title}\n  // authors={items.volumeInfo.authors}\n  // description={items.volumeInfo.description}\n  , {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Books;","map":{"version":3,"sources":["/Users/pollysu/Desktop/UCR Bootcamp.nosync/BooksReactRouter/client/src/pages/Books.js"],"names":["React","useState","useEffect","DeleteBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Results","axios","Books","book","setBook","result","setResult","apiKey","setApiKey","handleChange","event","target","value","handleSubmit","preventDefault","get","then","data","console","log","items","map","fontWeight","volumeInfo","title","authors","previewLink","float","imageLinks","thumbnail","marginLeft","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Results from \"../components/Results\";\nimport axios from 'axios';\n\n\nfunction Books() {\n  const [book, setBook] = useState(\"\");\n  const [result, setResult] = useState([]);\n  const [apiKey, setApiKey] = useState(\"AIzaSyBjBhHbs9f8Dyp1xyn0LGGG9f9zAPhFSpQ\")\n\n  function handleChange(event) {\n    const book = event.target.value;\n    setBook(book);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    axios.get(\"https://www.googleapis.com/books/v1/volumes?q=$\" + book + \"&maxResult=40\")\n      .then(data => {\n        console.log(data.data.items)\n        setResult(data.data.items)\n      })\n  }\n  // // Setting our component's initial state\n  // const [books, setBooks] = useState([])\n  // const [formObject, setFormObject] = useState({})\n\n  // // Load all books and store them with setBooks\n  // useEffect(() => {\n  //   loadBooks()\n  // }, [])\n\n  // // Loads all books and sets them to books\n  // function loadBooks() {\n  //   API.getBooks()\n  //     .then(res =>\n  //       setBooks(res.data)\n  //     )\n  //     .catch(err => console.log(err));\n  // };\n\n  // // Deletes a book from the database with a given id, then reloads books from the db\n  // function deleteBook(id) {\n  //   API.deleteBook(id)\n  //     .then(res => loadBooks())\n  //     .catch(err => console.log(err));\n  // }\n\n  // // Handles updating component state when the user types into the input field\n  // function handleInputChange(event) {\n  //   const { name, value } = event.target;\n  //   setFormObject({ ...formObject, [name]: value })\n  // };\n\n  // // When the form is submitted, use the API.saveBook method to save the book data\n  // // Then reload books from the database\n  // // function handleFormSubmit(event) {\n  // //   event.preventDefault();\n  // //   if (formObject.title && formObject.author) {\n  // //     API.saveBook({\n  // //       title: formObject.title,\n  // //       author: formObject.author,\n  // //       synopsis: formObject.synopsis\n  // //     })\n  // //       .then(res => loadBooks())\n  // //       .catch(err => console.log(err));\n  // //   }\n  // // };\n\n  // // Handle Submit\n  // const handleSubmit = () => {\n  //   if (formObject.title) {\n  //     axios.get('https://www.googleapis.com/books/v1/volumes?q=${query}')\n  //       .then(res => {\n  //         console.log(res.data)\n  //       }).catch(err => {\n  //         console.log(err.response)\n  //       })\n  //   }\n  // }\n\n\n\n  return (\n    <Container className=\"d-flex justify-content-center align-items-center flex-column\">\n      <Row>\n        <Col size=\"lg-12\">\n          <Jumbotron>\n            <h1>Google Books Search</h1>\n            <h2>Search for and Save Books of Interest</h2>\n          </Jumbotron>\n          <form onSubmit={handleSubmit}>\n            <Input\n\n              // name=\"title\"\n              value={book}\n              placeholder=\"Book Search (required)\"\n              onChange={handleChange}\n            />\n\n            <FormBtn type=\"submit\" >\n              Search\n              </FormBtn>\n          </form>\n        </Col>\n\n        <Col size=\"md-12\">\n\n          {result.map(book => (\n            <div className=\"card\">\n              <div className=\"card-body\">\n\n                <tr style={{ fontWeight: \"bold\" }}>{book.volumeInfo.title}</tr>\n                <tr>Written By: {book.volumeInfo.authors}</tr>\n\n                <a href={book.volumeInfo.previewLink}>\n                  <img style={{ float: \"left\" }} src={book.volumeInfo.imageLinks.thumbnail} alt={book.title} />\n                </a>\n                <table >\n\n\n\n                  <tr style={{ float: \"left\", marginLeft: \"15px\" }}>Description: {book.volumeInfo.description}</tr>\n                </table>\n              </div>\n            </div>\n          ))}\n          <Results\n          // image={items.imageLinks.thumbnail}\n          // title={items.volumeInfo.title}\n          // authors={items.volumeInfo.authors}\n          // description={items.volumeInfo.description}\n          />\n        </Col>\n        {/* <Col size=\"md-6 sm-12\">\n          <Jumbotron>\n            <h1>Books On My List</h1>\n          </Jumbotron>\n          {books.length ? (\n            <List>\n              {books.map(book => (\n                <ListItem key={book._id}>\n                  <Link to={\"/books/\" + book._id}>\n                    <strong>\n                      {book.title} by {book.author}\n                    </strong>\n                  </Link>\n                  <DeleteBtn onClick={() => deleteBook(book._id)} />\n                </ListItem>\n              ))}\n            </List>\n          ) : (\n              <h3>No Results to Display</h3>\n            )}\n        </Col> */}\n      </Row>\n    </Container>\n  );\n}\n\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}